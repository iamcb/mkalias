#!/usr/bin/env python3
"""
    mkalias.py - CLI app to create finder aliases
    Created by IAMCB

"""

import argparse
import os


def parse_args():
    parser = argparse.ArgumentParser(prog='mkalias',
                                     description='Application to create Finder aliases from the command line')

    parser.add_argument('source', help='Source to create alias from')
    parser.add_argument('destination', help='Destination of alias')
    parser.add_argument('-d', dest='is_dir', action='store_true',
                        help='Use this option if creating and alias of a directory')

    return parser.parse_args()


def check_path(source, destination, isdir):
    path_exists = True
    source = os.path.abspath(source)
    destination_head, destination_tail = os.path.split(destination)

    def print_not_found_error(location):
        print("Error '{}' not found!".format(location))

    if isdir:
        if not os.path.isdir(source):
            print_not_found_error(source)
            path_exists = False
        elif not os.path.isdir(destination_head):
            print_not_found_error(destination_head)
            path_exists = False
    else:
        if not os.path.isfile(source):
            print_not_found_error(source)
            path_exists = False
        elif not os.path.isdir(destination_head):
            print_not_found_error(destination_head)
            path_exists = False

    if path_exists:
        print("Source Dir - '{}'".format(source))
        print("Destination Dir - '{}'".format(destination))

    return path_exists


def main():
    args = parse_args()

    source = os.path.abspath(args.source)
    destination = os.path.abspath(args.destination)

    check_path(source, destination, args.is_dir)

    # if args.is_dir:
    #     check_dir(source, destination)
    # else:
    #     check_file(source, destination)


if __name__ == "__main__":
    main()
